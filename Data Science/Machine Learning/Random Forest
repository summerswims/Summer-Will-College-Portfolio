{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HPXYAH67D5jf"
      },
      "outputs": [],
      "source": [
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.datasets import make_classification\n",
        "from sklearn.model_selection import train_test_split \n",
        "from sklearn import metrics \n",
        "import pandas as pd\n",
        "\n",
        "league0 = 'league_dataset2.csv'\n",
        "df = pd.read_csv(league0)\n",
        "\n",
        "arr = df.to_numpy()\n",
        "\n",
        "#array slicing\n",
        "all_data = arr[:, 4 : -1] #gets rid of index column and excludes label column\n",
        "all_labels = arr[:, -1]  #assumes labels are in last column, hence -1\n",
        "\n",
        "x=all_data\n",
        "y=all_labels\n",
        "y=y.astype('int')\n",
        "\n",
        "x_train,x_test,y_train,y_test=train_test_split(x, y, test_size=0.2, random_state = 2)\n",
        "\n",
        "clf = RandomForestClassifier(max_depth=7, random_state=0)\n",
        "clf.fit(x_train, y_train)\n",
        "\n",
        "print(clf.predict(x_test))\n",
        "y_pred=clf.predict(x_test) \n",
        "print(\"Accuracy:\",(metrics.accuracy_score(y_test, y_pred))*100, \"%\")\n",
        "print(clf.feature_importances_)"
      ]
    }
  ]
}
